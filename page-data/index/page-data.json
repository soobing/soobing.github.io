{
    "componentChunkName": "component---src-pages-index-js",
    "path": "/",
    "result": {"data":{"allMarkdownRemark":{"edges":[{"node":{"id":"e632ca24-cdf8-5a92-a665-5daa5cd0ed0b","excerpt":"보통 어플리케이션에서 공통된 디자인의 confirm 창을 사용한다. 이때, window.confirm과 같이 고객의 OK/CANCEL 클릭 여부에 따라서 다음 동작을 이어나가게 하고싶다면 어떻게 구현해야할까? 준비물 Modal Component (global 하게 등록) Global State Modal Hook 보통 웹 어플리케이션에서는 공통된 디자인의 confirm을 사용하므로 화면에 보여지는 역할을 하는 Modal Component가 필요하다. 이 컴포넌트는 어플리케이션 전반에 걸쳐서 자주 사용하는 라이브러리이므로 App.js에서 global 하게 로드한다. global 하게 등록된 Modal 컴포넌트를 제어하기 위해서는 어플리케이션 어느 곳에서든 제어 가능하게 하기 위해서 global state가 필요하다. 그래서 modal 관련 state가 변경되었을때, Modal 컴포넌트가 render 되게 한다. 이제 window.confirm 처럼 사용하기 위해 confirm 함수를…","frontmatter":{"categories":"feature","title":"Promise를 사용하여 window.confirm 구현하기","date":"August 19, 2022"},"fields":{"slug":"/feature/confirm/"}}},{"node":{"id":"d6a1a1c7-eeeb-5a44-b573-d8d39a5cff0c","excerpt":"로딩 시작과 끝을 보여주어야 함. role=\"alert\" aria-live=\"polite\"","frontmatter":{"categories":"접근성","title":"로딩 indicator 구현시 고려해야할 접근성","date":"March 31, 2022"},"fields":{"slug":"/a11y/loader/"}}},{"node":{"id":"18c16f10-2ec9-575b-b7d7-b7dd6f38c011","excerpt":"모달 레이어에 role=\"dialog\" 속성 선언 레이어를 제외한 뒤에 보이는 영역(dimmed 된 영역) aria-hidden=\"true\" aria-hidden=\"true\"로 설정한 영역에 모달이 children으로 들어가서는 안됨. 다른 이유들도 있지만, dialog는 body 태그 밑으로 append 시키는 것이 좋은 이유중에 하나. 모달이 닫히고 초점이 어디로 이동해야 하는가? aria-labeledby 와 id 연결 aria-hidden 값이랑 open 값이랑 연결 참고 https://web.dev/hiding-and-updating-content/ aria-hidden=\"true\"로 설정한 영역에 모달이 children으로 들어가서는 안됨.","frontmatter":{"categories":"접근성","title":"모달 구현시 고려해야할 접근성","date":"March 30, 2022"},"fields":{"slug":"/a11y/modal/"}}},{"node":{"id":"4acd9efc-5e3a-559b-940f-faeae12a2748","excerpt":"테스트코드를 잘짜는 것도 중요한데, 빠르게 많은 케이스를 다루는게 더 중요한것 같다. (2022.3.7 장애내고 느낀점;ㅋ) get vs find cy.get은 되지만, cy.find는 불가능.\ncy.get.find 이런식으로 체이닝 가능 within cy.get or cy.find로 좁힌 범위 내에서 무언가 실행할때 within이  유용하다. should, and then 사용하는 것보다 should와 and의 조합으로 여러가지 조건을 테스트하는것을 권장함.","frontmatter":{"categories":"test","title":"cypress 주요 api 모음","date":"March 03, 2022"},"fields":{"slug":"/test/cypress-api/"}}},{"node":{"id":"535119b4-e0a2-5799-b8c6-96f4693e44c2","excerpt":"IE에서 새창으로 열어 window 객체에 바인딩된 메서드 호출시, 호출후에 해당 메서드에서 사용했던 object 접근시, object permission denied 에러가 발생하는 이슈가 있다. 결론 = IE에서 새창으로 데이터 주고받아야 하는경우 postMessage를 사용해야 한다. 주의할 점 message 이벤트 리스너를 등록할때 꼭, 필요한 이벤트만 받을 수 있도록\nevent.origin을 체크하도록 한다.\nevent.data를 통해 trigger 된 데이터를 받을 수 있다. 이벤트를 송출할때, target에 '*'을 넣지 않도록 한다.\n왜냐하면 모든 창이 해당 메시지를 다 받을 수 있기 때문에 보안 이슈가있을 수 있다.","frontmatter":{"categories":"browser","title":"postmessage를 이용하여 window 간에 통신하기","date":"February 28, 2022"},"fields":{"slug":"/browser/post-message/"}}},{"node":{"id":"a3c88b8a-059f-5452-afc0-13f38e8d5382","excerpt":"","frontmatter":{"categories":"feature","title":"api 서비스 설계","date":"February 23, 2022"},"fields":{"slug":"/feature/api-service/"}}},{"node":{"id":"5dd3e43a-9b37-50f5-a92a-c15b94c358f9","excerpt":"window.open 으로 새창 열었을때,  => scrollable, resizeable, tool 등등 조작가능, windowRef를 반환함.","frontmatter":{"categories":"browser","title":"PC용 브라우저(IE, Safari, Chrome, ...) 이슈 모음","date":"February 23, 2022"},"fields":{"slug":"/browser/pc-issues/"}}},{"node":{"id":"52585655-c150-5fc2-bf0b-92b656946b35","excerpt":"IE 11을 대응하면서 겪었던 이슈들 input file 일때 e.target.value 값이 변경되면 onChange를 다시 탄다. text 일때 value 값이 변경되면 onInput 핸들러를 항상 탄다. Date 관련이슈들 Date 생성자 호출시 leadingZeror를 붙이지 않을 경우 Invalid Date 반환 new Date('2021-1') IE에서는 toLocaleDateString 사용시 tokenizer가 /임. (참고로 크롬은 .이다.) 해결방법은 toLocalDateString이 브라우저별로 이슈가 많으므로 getter를 사용한다. ScrollTo 동작 안함. synctax error 백화현상. element.scrollTop = 0 으로 조정해야 함 IE에서 window.open 시 반환하는 윈도우창에 global 변수 바인딩 안됨 IE에서 a tag target=“_blank”로 새창 열 경우 window.opener가 chorme은 null이고, IE는…","frontmatter":{"categories":"browser","title":"Internet Explorer 이슈 모음","date":"February 23, 2022"},"fields":{"slug":"/browser/ie-issues/"}}},{"node":{"id":"c6ca4d9e-5b24-52df-b5be-ed6e0b75a008","excerpt":"제 블로그의 테마나 Gatsby의 다른 테마를 활용해서 Github Blog를 만들고 싶은 분들이 계실텐데요! 이런 분들에게 도움을 드리고자 이 글을 쓰게 되었습니다. 잘 안되는 부분이나 궁금한 점을 댓글로 남겨주면 확인해보고 답변 드리도록 하겠습니다! 1. Repository 생성하기 GitHub Blog를 만들려면 Github에 Repository를 생성해야 합니다.  GitHub에 로그인 한 뒤에 우측 상단에 있는 New Repository 버튼을 클릭하면 repository 생성 페이지로 이동하게 됩니다. 이 때 Import a repository 버튼을 클릭합니다.  아래 페이지에 도달하시면 두 가지 정보를 넣어주셔야 하는데, Your old repository’s clone URL에는 사용하고자 하는 gatsby 테마가 있는 repository의 주소를 넣어주시면 됩니다. 제 블로그 테마를 쓰고 싶으신 분들은 여기에 https://github.com/zoomKoding/…","frontmatter":{"categories":"블로그","title":"Gatsby 테마로 GitHub Blog 만들기","date":"July 06, 2021"},"fields":{"slug":"/gatsby-github-blog/"}}},{"node":{"id":"ee56f310-266a-5147-8280-cbf916cbbff4","excerpt":"👋 소개 블로그를 직접 운영하면서 조금씩 그려봤던 이상적인 개발 블로그 테마를 Gatsby를 통해 만들어보게 되었습니다. 이 테마가 블로그를 운영하고자 하시는 분들에게 자신의 이야기를 잘 담을 수 있는 공간이 되었으면 좋겠습니다.🙌 블로그 테마가 맘에 드셨다면 아래 과정을 통해 자신의 블로그를 만들어보시길 바랍니다! 혹시 만드시는 과정에서 궁금하신 점이나 어려움이 있으시다면 이슈를 통해 문의 남겨주세요! 스타는 블로그 테마를 지속적으로 발전시키는데 큰 힘이 됩니다!⭐️ 🚀 시작하기 Github Page나 Netlify 중 원하시는 배포 환경에 따라 다음 과정을 진행하시면 빠르게 블로그를 만드실 수 있습니다. 🦖 GitHub Page로 만들기 깃헙 페이지를 통해 블로그를 만드시다면 아래 글을 참고해주세요! Gatsby 테마로 GitHub Blog 만들기 🔧 Netlify로 만들기 아래 버튼을 활용하면 개인 계정에 zoomkoding-gatsby-blog를 사용하고 있는 Reposito…","frontmatter":{"categories":"블로그","title":"쉽고 빠르게 나만의 개츠비(Gatsby) 블로그 만들기","date":"March 22, 2021"},"fields":{"slug":"/gatsby-starter-zoomkoding-introduction/"}}}]},"site":{"siteMetadata":{"language":"ko","author":{"name":"슈빈","bio":{"role":"개발자","description":["지속가능한 소프트웨어를 만드는","열정이 가득한","즐겁게 일하는"]},"social":{"github":"https://github.com/soobing","linkedIn":"https://www.linkedin.com/in/soobin-bak-8a1994117/","email":"qls0147@naver.com"}}}}},"pageContext":{}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}