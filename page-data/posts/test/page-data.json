{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/test",
    "result": {"pageContext":{"currentCategory":"test","categories":["All","config","framework","bundler","react","next","translate","typescript","browser","infra","a11y","react-query","javascript","cs","feature","troubleshooting","test"],"edges":[{"node":{"id":"34e53d64-0467-56f3-8179-68e3f4d6c48c","excerpt":"🔨 다듬을 필요가 있는 글입니다. 테스트 flow 테스트 코드 작성 → 테스트 읽고 → 실행 → 출력(Reporter) 테스트 종류 단위 테스트: 모듈을 분리된 환경에서 테스트 의존성이 있는 모듈을 제어하기 위해 필연적으로 모의 객체(Mocking)을 사용할 수밖에 없으며, 이 경우 각 모듈이 실제로 잘 연결되어 상호 작용하는지에 대해서는 검증하지 못한다. 통합 테스트: 2개 이상의 모듈 간의 상호작용을 테스트 (개발자 관점의 테스트) 단위 테스트에 비해 mocking을 덜하며, 모듈 간의 연결에서 발생하는 에러를 검증할 수 있다. E2E 테스트: 사용자의 실행 환경과 거의 동일한 환경에서 테스트를 진행 (사용자 관점의 테스트) 세부 모듈들이 갖는 다양한 상황들의 조합을 고려해야 하기 때문에 테스트 자바스크립트 테스트 도구 자바스크립트 테스트는 도구들은 아래와 같이 분류할 수 있다. Test Runners Testing Frameworks Assertion Libraries Tes…","fields":{"slug":"/test/test-introduction/"},"frontmatter":{"categories":"test","title":"자바스크립트 테스트 개념정리","date":"April 14, 2022","draft":false}},"next":null,"previous":{"fields":{"slug":"/feature/confirm/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}