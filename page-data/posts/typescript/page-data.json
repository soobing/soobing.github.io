{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/typescript",
    "result": {"pageContext":{"currentCategory":"typescript","categories":["All","framework","react","next","translate","typescript","browser","a11y","infra","react-query","javascript","cs","feature","troubleshooting","test"],"edges":[{"node":{"id":"7af1f27b-4f32-56a8-8140-5191c8ba3150","excerpt":"원글: https://www.omarileon.me/blog/typescript-as-const 새로운 구문인 “상수 어설션(const assertions)“은 TypeScript 3.4에서 도입되었습니다. 이것은 변수가 변경되지 않을 것(immutable)이고 가능한 엄격한 타입을 제공해야 한다는 것을 타입스크립트에 알려줍니다. 이는 타입의 종류에 따라 다르게 영향을 미치므로, 이 글에서는 상수 어설션을 어떻게 사용하고 왜 유용한지에 대해 설명할 것입니다. 문자열/숫자 문자열이나 숫자에 “as const”를 추가하면 특정 값으로 타입을 좁힐 수 있습니다. 숫자의 경우 문자열 또는 숫자의 경우 일반적으로 “const”를 사용하여 변수를 정의하면 동일한 효과를 얻을 수 있기 때문에 덜 유용합니다. 런타임 안전성이라는 추가 이점도 있습니다. 때로는 변수로 값을 정의하지 않고, 단순히 문자열 리터럴을 사용하고 싶을 수 있습니다. 예를 들어 값을 반환할 때처럼요. 그때 “as const”…","fields":{"slug":"/typescript/typescript-as-const/"},"frontmatter":{"categories":"translate typescript","title":"(번역) 타입스크립트에서 'As Const' 이해하기","date":"April 14, 2024","draft":false}},"next":{"fields":{"slug":"/typescript/as-const-vs-satisfies/"}},"previous":{"fields":{"slug":"/react/process-env-destructuring-error.md/"}}},{"node":{"id":"863af574-c232-55ba-952a-d2a2e6490845","excerpt":"Argument of type ‘string’ is not assignable to parameter of type ‘“apple” | “banana”‘.(2345) 타입스크립트 사용시 때때로 예상치 못한 타입 호환성 문제에 직면하곤 합니다. 엄격한 타입 시스템을 가지고 있는 타입스크립트로 코드를 작성하다 보면 더욱 이러한 문제와 자주 직면합니다. 하지만 다행히도, 타입스크립트는 이러한 문제들을 해결할 수 있는 강력한 도구들을 제공합니다. 이 글에서는 타입 호환성 문제를 해결하는 데 있어 as const와 satisfies라는 두 가지 도구의 사용 방법과 각각의 장점에 대해 알아보겠습니다. 먼저 우리가 자주 마주할 수 있는 상황을 예시 코드로 살펴보겠습니다. 위에 에러 메시지는 함수의 인자로 예상되는 타입과 실제로 전달된 타입이 일치하지 않을 때 발생합니다. 이 경우, printPerson 함수는 \"apple\" 또는 \"banana\"라는 구체적인 문자열 타입을 기대하지만, perso…","fields":{"slug":"/typescript/as-const-vs-satisfies/"},"frontmatter":{"categories":"typescript","title":"타입스크립트 타입 호환성 문제 해결하기 \"as const vs satisfies\"","date":"March 31, 2024","draft":false}},"next":{"fields":{"slug":"/react/html-node-streaming/"}},"previous":{"fields":{"slug":"/typescript/typescript-as-const/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}