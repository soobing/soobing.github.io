{
    "componentChunkName": "component---src-templates-category-template-js",
    "path": "/posts/review",
    "result": {"pageContext":{"currentCategory":"review","categories":["All","framework","review","troubleshooting","config","bundler","react","next","translate","typescript","browser","infra","a11y","react-query","javascript","cs","feature","test"],"edges":[{"node":{"id":"e1a27ed4-56df-5c4e-960b-d658d1762f1d","excerpt":"안녕하세요. 오늘은 1년간 Atomic Design Pattern을 활용하여 디자인 시스템을 구축하면서 겪었던 구분 기준의 모호함과, 이를 해결하기 위해 명확한 규칙을 정립한 과정을 회고해보려고 합니다. 이 글에서는 Atomic Design Pattern의 개념 설명은 생략하고, 도입 계기와 겪었던 어려움, 문제 해결 과정, 그리고 그 과정에서 느낀 점을 공유하겠습니다. Atomic Design을 도입한 이유 React에서는 UI를 계층화하여 컴포넌트를 분할하고, 단일 책임 원칙에 따라 설계하는 방식을 권장합니다. 프로젝트가 성장하면서 공통적으로 사용되는 컴포넌트가 점점 증가했고, 이를  체계적으로 관리하고 재사용성을 높이기 위한 방법이 필요했습니다. 컴포넌트를 작은 단위로 나누어 조합하는 방식은 유지보수성과 확장성을 높이는 데 유용했으며, 이를 효과적으로 적용할 수 있는 패턴으로 Atomic Design이 적절하다고 판단했습니다. Brad Frost의 Atomic Design 개…","fields":{"slug":"/atomic-design-pattern-review/"},"frontmatter":{"categories":"review troubleshooting","title":"Atomic Design에서 명확한 기준점 찾기","date":"January 19, 2025","draft":false}},"next":{"fields":{"slug":"/package.json-config/"}},"previous":{"fields":{"slug":"/nextjs-cache/"}}}]}},
    "staticQueryHashes": ["1073350324","1956554647","2938748437"]}